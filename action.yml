name: 'Merge Istanbul coverage reports'
author: 'aleccool213'
description: 'Merge Istanbul coverage reports from multiple jobs into one.'
branding:
  icon: 'git-merge'
  color: 'green'
inputs:
  source:
    description: 'Path to source code'
    required: true
  coverage-reports:
    description: 'Path to coverage reports'
    required: true
  output-folder:
    description: 'Where to output merged reports'
    required: true
  code-coverage-workspace-generates:
    description: 'The workspace directory of the job which generates the coverage reports'
    required: true
outputs:
  report:
    description: 'Coverage report'
    value: steps.merge-coverage.outputs.report
  json-summary:
    description: 'JSON coverage summary'
    value: steps.merge-coverage.outputs.json
runs:
  using: 'composite'
  steps:
    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: 20

    - name: Install dependencies
      shell: bash
      if: ${{ steps.cache.outputs.cache-hit != 'true' }}
      run: npm i -g nyc@15.0.1

    - name: Collect coverage reports
      uses: actions/github-script@v6
      with:
        script: |
          const {readdir, writeFile, copyFile, mkdir} = require('fs').promises;
          await mkdir(`${{ github.workspace }}/coverage`);
          const reports = await readdir('${{ inputs.coverage-reports }}', { withFileTypes: true });
          
          const reportDirs = reports.filter(dirent => dirent.isDirectory()).map(dirent => dirent.name);       
          for (const dir of reportDirs) {
            await copyFile(`${{ inputs.coverage-reports }}/${dir}/coverage-final.json`, `${{ github.workspace }}/coverage/${dir}.json`)
          }; 
          
          const reportFiles = reports.filter(dirent => dirent.isFile() && dirent.name.includes('.json')).map(dirent => dirent.name);
          for (const file of reportFiles) {
            await copyFile(`${{ inputs.coverage-reports }}/${file}`, `${{ github.workspace }}/coverage/${file}.json`)
          }; 

    - name: Merge coverage
      shell: bash
      run: |
        nyc merge ${{ github.workspace }}/coverage ${{ github.workspace }}/coverage/coverage-final.json
    
    # Needed to make `nyc report` output proper reports when merging multiple reports together.
    # This finds-and-replaces the current working directory with the final workspace of ./merge_code_coverage_reports.yaml.
    # https://github.com/istanbuljs/nyc/issues/1249#issuecomment-677928933
    - name: Replace github workspace directory inside of coverage-final.json with final sonarqube workspace
      shell: bash
      run: sed -i -e 's@${{ inputs.code-coverage-workspace-generates }}@${{ github.workspace }}@g' coverage/coverage-final.json

    - name: Output coverage report
      shell: bash
      working-directory: ${{ inputs.source }}
      run: |
        nyc report -t ${{ github.workspace }}/coverage --reporter lcovonly --reporter html --report-dir ${{ inputs.output-folder }}
